version: '3'

services:
  api:
    build:
      context: ./api
      args:
        NODE_ENV: ${NODE_ENV}
    restart: always
    volumes:
      - ./api:/usr/app
      - /usr/app/node_modules
    expose:
      - 8000
      - 9000
    ports:
      - ${API_PORT_HOST}:8000
    networks:
      - web-${DEPLOY_ENV}
      - local-${DEPLOY_ENV}
    labels:
      - 'traefik.docker.network=web-${DEPLOY_ENV}'
      - 'traefik.enable=true'
      - 'traefik.api.port=8000'
      - 'traefik.api.protocol=http'
      - 'traefik.api.frontend.rule=Host:${API_SUBDOMAIN}.domain.com'
      - 'traefik.api.frontend.entryPoints=https'
      - 'traefik.ws.port=9000'
      - 'traefik.ws.protocol=http'
      - 'traefik.ws.frontend.rule=Host:${WS_SUBDOMAIN}.domain.com'
      - 'traefik.ws.frontend.entryPoints=https'
    container_name: api-${DEPLOY_ENV}

  www:
    build:
      context: ./www
      args:
        NODE_ENV: ${NODE_ENV}
    restart: always
    volumes:
      - ./www:/usr/app
      - /usr/app/node_modules
    expose:
      - 3000
    networks:
      - web-${DEPLOY_ENV}
    labels:
      - 'traefik.docker.network=web-${DEPLOY_ENV}'
      - 'traefik.enable=true'
      - 'traefik.port=3000'
      - 'traefik.protocol=http'
      - 'traefik.frontend.rule=Host:${WWW_SUBDOMAIN}.domain.com'
      - 'traefik.frontend.entryPoints=https'
    container_name: www-${DEPLOY_ENV}

  db:
    image: postgres
    restart: always
    expose:
      - 5432
    networks:
      - local-${DEPLOY_ENV}
    volumes:
      # - ./initdb:/docker-entrypoint-initdb.d/
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    container_name: db-${DEPLOY_ENV}

  hasura:
    image: hasura/graphql-engine:v1.0.0-beta.10.cli-migrations
    volumes:
      - ./db/migrations:/hasura-migrations
    expose:
      - 8080
    ports:
      - ${HASURA_CONSOLE_PORT}:8080
    depends_on:
      - db
    restart: always
    networks:
      - local-${DEPLOY_ENV}
    environment:
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_DATABASE_URL: ${HASURA_GRAPHQL_DATABASE_URL}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
    container_name: hasura-${DEPLOY_ENV}

volumes:
  db_data:

networks:
  local-production:
    external: true
  local-staging:
    external: true
  web-production:
    external: true
  web-staging:
    external: true
